import React, { useState, useEffect } from 'react'
import {Search, Loader} from '../components';
import { useNavigate } from 'react-router-dom';
import {Header, RenderCards} from '../components';
import {fetchPostsPrivate} from '../services'


const MyPost = () => {
    const [loading, setLoading] = useState(false);
    const [allPost, setAllPost] = useState(null);
    const [searchText, setSearchText] = useState('');
    const [searchResults, setSearchResults] = useState(null);
    const [searchTimeOut, setSearchTimeOut] = useState(null);
    const headerToken = sessionStorage.getItem('token');
    const navigate = useNavigate();

    useEffect(()=>{

        if(!headerToken){
            navigate('/login');
        }
        
        
        fetchPostsPrivate(setLoading, setAllPost);
    }, [])

    return (
        <>
            <Header/>
        <section className='max-w text-7xl mx-auto px-4 py-8'>
            {/* <div>
            <h1 className='font-extrabold text-[#222328] text-[32px]'> The Conmunity showcase</h1>
            <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
            </div> */}

            <div className="mt-16">
                <Search allPost={allPost} searchText={searchText} setSearchText={setSearchText} searchResults={searchResults} setSearchResults={setSearchResults} searchTimeOut={searchTimeOut} setSearchTimeOut={setSearchTimeOut}/>
            </div>

            <div className='mt-10'>
                {loading ? (
                    <div className='flex justify-center'>
                        <Loader/>
                    </div>
                ): <>
                    {searchText && (
                        <h2 className='font-medium text-[#666e75] text-xl mb-3'>Showing results for <span className='text-[#222328]'>{searchText}</span></h2>
                    )}
                    <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-1 gap-3'>
                        {searchText ? (
                            <RenderCards data={searchResults} title="No serch Results found"/>
                        ): (
                            <RenderCards data={allPost} title="No post found"/>
                        )}
                    </div>
                </>}
            </div>

        </section>
        </>
    )
    }

export default MyPost